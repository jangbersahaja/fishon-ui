import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function PoliciesCard({ policies, pickup }) {
    if (!policies && !pickup)
        return null;
    return (_jsxs("section", { className: "p-5 mt-6 bg-white border rounded-2xl border-black/10 sm:p-6", children: [_jsx("h3", { className: "text-base font-semibold sm:text-lg", children: "Policies & info" }), _jsxs("div", { className: "grid grid-cols-1 gap-4 mt-2 text-sm text-gray-700 sm:grid-cols-2", children: [policies && (_jsxs("ul", { className: "space-y-1", children: [_jsxs("li", { children: [_jsx("strong", { children: "Catch & keep:" }), " ", policies.catchAndKeep ? "Allowed" : "No"] }), _jsxs("li", { children: [_jsx("strong", { children: "Catch & release:" }), " ", policies.catchAndRelease ? "Yes" : "No"] }), _jsxs("li", { children: [_jsx("strong", { children: "Child friendly:" }), " ", policies.childFriendly ? "Yes" : "No"] }), "wheelchairAccessible" in policies && (_jsxs("li", { children: [_jsx("strong", { children: "Wheelchair accessible:" }), " ", policies.wheelchairAccessible ? "Yes" : "No"] })), "alcoholAllowed" in policies && (_jsxs("li", { children: [_jsx("strong", { children: "Alcohol:" }), " ", policies.alcoholAllowed ? "Allowed" : "Not allowed"] })), "smokingAllowed" in policies && (_jsxs("li", { children: [_jsx("strong", { children: "Smoking:" }), " ", policies.smokingAllowed ? "Allowed" : "Not allowed"] }))] })), pickup && (_jsxs("ul", { className: "space-y-1", children: [_jsxs("li", { children: [_jsx("strong", { children: "Pickup:" }), " ", pickup.available ? "Available" : "Not available"] }), "fee" in pickup && pickup.fee !== undefined && (_jsxs("li", { children: [_jsx("strong", { children: "Pickup fee:" }), " RM", pickup.fee] })), Array.isArray(pickup.areas) && pickup.areas.length > 0 && (_jsxs("li", { children: [_jsx("strong", { children: "Areas:" }), " ", pickup.areas.join(", ")] })), pickup.notes && (_jsxs("li", { children: [_jsx("strong", { children: "Notes:" }), " ", pickup.notes] }))] }))] })] }));
}
